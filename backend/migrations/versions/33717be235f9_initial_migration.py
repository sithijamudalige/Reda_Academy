"""Initial migration

Revision ID: 33717be235f9
Revises: a76059b030d1
Create Date: 2025-09-17 10:04:13.196850

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '33717be235f9'
down_revision = 'a76059b030d1'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('techers')
    op.drop_table('login_history')
    op.drop_table('user')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('user_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('role', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('full_name', sa.VARCHAR(length=150), server_default=sa.text("'Unknown'::character varying"), autoincrement=False, nullable=False),
    sa.Column('initials', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('contact_number', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('address', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('guardian_name', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('guardian_number', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('image_filename', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    sa.UniqueConstraint('email', name='user_email_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('username', name='user_username_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('login_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('login_time', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('ip_address', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('user_agent', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('success', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('login_history_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('login_history_pkey'))
    )
    op.create_table('techers',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('lecturer_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('address', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('telephone', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('qualification', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('rate_per_hour', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('module_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('no_of_hours_allocated', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('password_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('profile_picture', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('techers_pkey')),
    sa.UniqueConstraint('username', name=op.f('techers_username_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
